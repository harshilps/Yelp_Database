/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package insertion;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.Component;
import java.awt.GridLayout;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;


import org.json.simple.JSONObject;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Ketha
 */

public class hw3 extends javax.swing.JFrame {
    //bhargavi
 boolean isUser;
 String line = null;
 ArrayList<JSONObject> json = new ArrayList<JSONObject>();
 JSONObject obj;
 static Connection con = null;
                String prevQuery;
              public  String vote;  
              public String review_count;  
              public String no_friends; 
              public String check;
              public String check1;
              public String check2;
              public String check3;
              public String check4;
              public String andor;
              public String month;
              public String year;
              public String stars;
              public String query1;
              public String query2;
 //bhargavi
    /**
     * Creates new form GUITest
     */
    public hw3() {
        
       
        initComponents();
         

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jComboBox10 = new javax.swing.JComboBox();
        jComboBox11 = new javax.swing.JComboBox();
        jComboBox12 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jComboBox5 = new javax.swing.JComboBox();
        jComboBox6 = new javax.swing.JComboBox();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jComboBox9 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Result = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton4.setText("Generate Subcategories");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", "<=", ">=" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", "<=", ">=" }));

        jButton1.setText("Execute Business Query");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Votes");

        jLabel13.setText("Star");

        jLabel15.setText("From");

        jLabel16.setText("To");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Business Query Analysis");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("SubCategory"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
        );

        jScrollPane5.setViewportView(jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Main Category"));

        jCheckBox1.setText("Active Life");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Arts & Entertainment");

        jCheckBox3.setText("Automative");

        jCheckBox4.setText("Car Rental");

        jCheckBox5.setText("Cafe");

        jCheckBox6.setText("Beauty & Spas");

        jCheckBox7.setText("Convenience Stores");

        jCheckBox8.setText("Dentists");

        jCheckBox9.setText("Docotors");

        jCheckBox10.setText("Drugstores");

        jCheckBox11.setSelected(true);
        jCheckBox11.setText("Department Stores");

        jCheckBox12.setText("Education");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jCheckBox13.setText("Event Planning & Services");

        jCheckBox14.setText("Flowers & Gifts");

        jCheckBox15.setText("Food");

        jCheckBox16.setText("Health & Medical");

        jCheckBox17.setText("Home Services");

        jCheckBox18.setText("Home & Garden");

        jCheckBox19.setText("Hospitals");

        jCheckBox20.setText("Hotels & Travel");

        jCheckBox21.setText("Hardware Stores");

        jCheckBox22.setText("Grocery");

        jCheckBox23.setText("Medical Centers");

        jCheckBox24.setText("Nurseries & Gardening");

        jCheckBox25.setText("Nightlife");

        jCheckBox26.setText("Restaurants");

        jCheckBox27.setText("Shopping");

        jCheckBox28.setText("Transportation");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jCheckBox10)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox16))
                    .addComponent(jCheckBox3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(56, 56, 56)
                        .addComponent(jCheckBox15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBox6)
                        .addGap(40, 40, 40)
                        .addComponent(jCheckBox20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox5))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox19)
                            .addComponent(jCheckBox18)
                            .addComponent(jCheckBox17)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox7)
                            .addComponent(jCheckBox8)
                            .addComponent(jCheckBox9)
                            .addComponent(jCheckBox11))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox25)
                            .addComponent(jCheckBox23)
                            .addComponent(jCheckBox22)
                            .addComponent(jCheckBox21)
                            .addComponent(jCheckBox24)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBox12)
                        .addGap(62, 62, 62)
                        .addComponent(jCheckBox26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox13)
                            .addComponent(jCheckBox14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox28)
                            .addComponent(jCheckBox27))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox9)
                    .addComponent(jCheckBox23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox12)
                    .addComponent(jCheckBox26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox13)
                    .addComponent(jCheckBox27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox14)
                    .addComponent(jCheckBox28))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane6.setViewportView(jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Attributes"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jScrollPane7.setViewportView(jPanel4);

        jButton5.setText("Generate Attributes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jComboBox12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(243, 243, 243)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                    .addComponent(jTextField8))
                                .addGap(30, 30, 30)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(299, 299, 299))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(446, 446, 446))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))))
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(276, 276, 276))
        );

        jTabbedPane1.addTab("tab1", jPanel5);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", ">", "<", ">=", "<=" }));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", ">=", "<=" }));

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", ">=", "<=" }));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", ">=", "<=" }));

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", ">=", "<=" }));

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                type(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Execute User Query");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Yelping Since", "Average Star"
            }
        ));
        Result.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResultMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Result);

        jLabel2.setText("Member Since");

        jLabel3.setText("Review ");

        jLabel4.setText("Number of Friends");

        jLabel5.setText("Average Stars");

        jLabel6.setText("Number of Votes");

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setText("Result");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Values");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jLabel8.setText("Month");

        jLabel9.setText("Year");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("User Query Analysis");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        jLabel11.setText("AND/OR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(jLabel7))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jComboBox8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(51, 51, 51))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(386, 386, 386))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(200, 200, 200)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(511, 511, 511))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(292, 292, 292)))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(593, 593, 593))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1095, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(833, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(544, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void type(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_type
////bhargavi        // TODO add your handling code here:
    }//GEN-LAST:event_type

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            
              
              
        try{ 
                    year=jComboBox5.getSelectedItem().toString();
                   month=this.jTextField1.getText();
                    stars=this.jTextField4.getText();
                   vote=this.jTextField5.getText();
                  review_count=this.jTextField2.getText();
                  no_friends=this.jTextField3.getText();
                    check=jComboBox5.getSelectedItem().toString();
                    check1=jComboBox6.getSelectedItem().toString();
                   check2=jComboBox7.getSelectedItem().toString();
                    check3=jComboBox8.getSelectedItem().toString();
                   check4=jComboBox9.getSelectedItem().toString();
                   andor=jComboBox2.getSelectedItem().toString();
                  query2 = "select * from (select * from  yelp_users where to_char((YELPING_SINCE),'YYYY-MM')='"+year+"-"+month+"' "+"OR"+" review_count = '"
    +review_count+"' "+"OR"+" average_stars='"+stars+"') x,(select count(friends_id)as number_of_friends,user_id from friends group by user_id) y ,(select SUM(cool+funny+useful) as number_of_votes,user_id from votes group by user_id) z where x.user_id = y.user_id and x.user_id =z.user_id "+
    "OR" + " y.number_of_friends ='"+no_friends+"' "+"OR"+" number_of_votes ='"+vote+"'"; 
                   
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(this,"Please check your entry details and try again.","Error",JOptionPane.ERROR_MESSAGE);
                    return;
                }
         DBConnection dbconnection = new DBConnection();
 try{
  con = dbconnection.openConnection();
  System.out.println("Connection working");
 }
 catch(Exception e){
     System.out.println("Connection not working");
     e.printStackTrace();
 }
 
  try{
  queringData();
  }
  catch(Exception e){
      System.out.println("Query not working");
      e.printStackTrace();
  }
  //bhargavi
               jTextArea2.setText(query1);
        // jTextArea2.setText(this.jTextField5.getText()+this.jTextField2.getText()+this.jTextField3.getText()+jComboBox5.getSelectedItem().toString()+jComboBox6.getSelectedItem().toString()+jComboBox7.getSelectedItem().toString());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResultMouseClicked
         String sSelected = "";
        String prevQuery = jTextArea2.getText();//initialized string prevquery here
      
        String sQuery = "";
        DBConnection dbconnection = new DBConnection();
        //START
             if (Result.getSelectedRow() > -1){
             System.out.println("assignment3.userSearch.user_tableMouseClicked()");
             String Selected_user = Result.getValueAt(Result.getSelectedRow(),3).toString();
             System.out.println(Selected_user);
             
             try {        
                 queryingReviewsTableForUser(Selected_user);
             } catch (SQLException ex) {
                 Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
             }
         }

        //START
        // TODO add your handling code here:
    
        //ADDING METHOD
                
        //ADDING METHOD
    }//GEN-LAST:event_ResultMouseClicked
//ADDING METHOD
    private void queryingReviewsTableForUser(String Selected_user) throws SQLException {
        String line = null;
 ArrayList<JSONObject> json = new ArrayList<JSONObject>();
 JSONObject obj;
 Connection con = null;
 DBConnection dbconnection = new DBConnection();
  con = dbconnection.openConnection();
  java.sql.Statement stmt = null;
                String query = "select user_id,review_id,stars from reviews where user_id = '"+Selected_user+"'";
                jTextArea2.setText(query);
                System.out.println(query);
    stmt = con.createStatement();
    ResultSet rs = stmt.executeQuery(query);
    while(rs.next()){
    String user_id =rs.getString(1);
     String review_id = rs.getString(2);
     BigDecimal stars = rs.getBigDecimal(3);
                   System.out.println("user_id "+user_id+" review_id "+review_id+" stars "+stars);
             ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnCount(rsmd.getColumnCount());
            Vector<String> cols = new Vector();
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                cols.add(rsmd.getColumnName(i + 1));
            }
            model.setColumnIdentifiers(cols);
            while (rs.next()) {
                cols = new Vector();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    cols.add(rs.getString(rsmd.getColumnName(i + 1)));
                }
                model.addRow(cols);
            }
            Result.setModel(model);
   
        } 
 }

    //ADDING METHOD
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            DBConnection dbconnection = new DBConnection();
            try{
  con = dbconnection.openConnection();
  System.out.println("Connection working");
 }
 catch(Exception e){
     System.out.println("Connection not working");
     e.printStackTrace();
 }
            String sQuery = "";
            ArrayList<String> BusnSel = new ArrayList();
            for (Component c : jPanel2.getComponents()) {
                if (c.getClass().equals(javax.swing.JCheckBox.class)) {
                    JCheckBox jcb = (JCheckBox) c;
                    if (jcb.isSelected()) {
                        BusnSel.add(jcb.getText());
                    }
                }
            }
            sQuery = sQuery + "SELECT DISTINCT BUSNSUBCAT FROM BUSINESSCATEGORY WHERE ";
            for (int i = 0; i < BusnSel.size(); i++) {
                if (i == BusnSel.size() - 1) {
                    sQuery = sQuery + " BUSNCATGNAME = ?";
                } else {
                    sQuery = sQuery + " BUSNCATGNAME = ? OR";
                }
            }
            jPanel3.removeAll();
            PreparedStatement ps = con.prepareStatement(sQuery);
            int iCtr = 1;
            for (String str : BusnSel) {
                ps.setString(iCtr, str);
                iCtr++;
            }
            ResultSet res = ps.executeQuery();
            subCats = new ArrayList();
            while (res.next()) {
                String result = res.getString(1) + "\n";
                JCheckBox newChBox = new JCheckBox();
                newChBox.setText(result);
                subCats.add(newChBox);
            }
            jPanel3.setLayout(new GridLayout(0, 2, 10, 10));
            for (JCheckBox ch : subCats) {
                jPanel3.add(ch);
                jPanel3.revalidate();
                jPanel3.repaint();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } finally {
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            // TODO add your handling code here:
        String yearto=jComboBox10.getSelectedItem().toString();
        String yearfrom=jComboBox11.getSelectedItem().toString();
        String monthto=this.jTextField8.getText();
        String monthfrom=this.jTextField9.getText();
        String star_ranged = (String) jComboBox3.getSelectedItem().toString();
                String vote_ranged = (String) jComboBox4.getSelectedItem().toString();
                String star_data = (String) jTextField7.getText();
                String votes_data =(String) jTextField7.getText();
               // String and_or = (String) andor.jComboBox12().toString();
                String and_or="OR";
         DBConnection dbconnection = new DBConnection();
 try{
  con = dbconnection.openConnection();
  System.out.println("Connection working");
 }
 catch(Exception e){
     System.out.println("Connection not working");
     e.printStackTrace();
 }
 
  try{
  
  
        //Business Category selection
        java.sql.Statement stmt = null;
        prevQuery = jTextArea1.getText();
        String sQuery = "SELECT * FROM BUSINESS";
        boolean bisAnotherQuery = false;
        String to=yearto+"-"+monthto;
        String from=yearfrom+"-"+monthfrom;
        ArrayList<String> BusnSel = new ArrayList();
        for (Component c : jPanel2.getComponents()) {
            if (c.getClass().equals(javax.swing.JCheckBox.class)) {
                JCheckBox jcb = (JCheckBox) c;
                if (jcb.isSelected()) {
                    BusnSel.add(jcb.getText());
                }
            }
        }

        if (BusnSel.size() > 0) {
            sQuery = sQuery + " WHERE BUSINESS_ID IN (SELECT BID FROM BUSINESSCATEGORY WHERE ";
            for (int i = 0; i < BusnSel.size(); i++) {
                if (i == BusnSel.size() - 1) {
                    sQuery = sQuery + " BUSNCATGNAME = '" + BusnSel.get(i) + "'";
                } else {
                    sQuery = sQuery + " BUSNCATGNAME = '" + BusnSel.get(i) + "' OR";
                }
            }
            ArrayList<String> subCatSel = new ArrayList();
            if (subCats != null) {
                for (JCheckBox ch : subCats) {
                    if (ch.isSelected()) {
                        subCatSel.add(ch.getText());
                    }
                }
            }
            if (subCatSel.size() > 0) {
                sQuery += " and rownum<=50 UNION SELECT BID FROM BUSINESSCATEGORY WHERE ";
                for (int i = 0; i < subCatSel.size(); i++) {
                    if (i == subCatSel.size() - 1) {
                        sQuery = sQuery + " BUSNSUBCAT = '" + subCatSel.get(i).trim() + "'";
                    } else {
                        sQuery = sQuery + " BUSNSUBCAT = '" + subCatSel.get(i).trim() + "' OR";
                    }
                }
            }
            bisAnotherQuery = true;
        }

        

        
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
     
            String sVotes = jTextField6.getText();
            String sVotesSign = (String) jComboBox4.getSelectedItem();
            //Integer sVotesSign=Integer.parseInt(sVotes);
            String sAvgRatingSign = (String) jComboBox3.getSelectedItem();
           // Integer sAvgRatingSign=Integer.parseInt(sAvgRatingSign1);
            Integer iAvgStars = Integer.parseInt(jTextField7.getText());//changed from value to text
            if ((sVotes != null) && (jTextField8 != null) && (jTextField9 != null)) {
                if (bisAnotherQuery) {
                    sQuery += " UNION";
                } else {
                    sQuery += " and rownum<=50 WHERE BUSINESS_ID IN (";
                }

                sQuery = sQuery + " SELECT DISTINCT BUSINESS_ID FROM REVIEWS";
                boolean isFrom = false;
                if (!jTextField8.equals("")) {
                    sQuery = sQuery + " WHERE to_char((DATEE),'YY-MM') = '" + to + "'";
                    isFrom = true;
                }
                if (!jTextField9.equals("")) {
                    if (isFrom) {
                        sQuery = sQuery + " AND";
                    }else{
                        sQuery = sQuery + " AND";
                    }
                    sQuery = sQuery + " to_char((DATEE),'YY-MM')= '" + from + "'";
                }
                sQuery = sQuery + " and rownum<=50 GROUP BY BUSINESS_ID HAVING AVG(STARS) " + sAvgRatingSign + " " + iAvgStars.toString();
                 //if (!(sVotes.equals(""))) {//ADD
                 // sQuery = sQuery + " AND VOTESUM(AVG(FUNNYVOTES), AVG(COOLVOTES), AVG(USEFULVOTES))" + sVotesSign + " " + sVotes;
               //}
                //DONT ADDSELECT BID FROM REVIEWS WHERE PUBLISHEDDATE > '2012-03-06' GROUP BY BID HAVING VOTESUM(AVG(FUNNYVOTES), AVG(COOLVOTES), AVG(USEFULVOTES))>30;
//ADD
            }

       // }isincluded thing
        sQuery += ")";
        //String sQuery1="SELECT BUSINESS_ID FROM BUSINESS WHERE BUSINESS_ID IN (SELECT BID FROM BUSINESSCATEGORY WHERE  BUSNCATGNAME LIKE '%Department Stores%' INTERSECT SELECT BID FROM BUSINESSCATEGORY WHERE  BUSNSUBCAT LIKE '%Sporting Goods%' INTERSECT SELECT DISTINCT BUSINESS_ID FROM REVIEWS WHERE DATEE >= '31-DEC-06' AND DATEE <= '29-DEC-13' GROUP BY Business_id HAVING AVG(STARS) = 4);";
      //  String sQuery1="SELECT BUSINESS_ID FROM BUSINESS,BUSINESSCATEGORY WHERE BUSNCATGNAME LIKE '%Department Stores%'";
        String query="";
                query = query+"select business_id,business_name,city,state,stars from business join businesscategory on business_id = bid where ";
           //hargavi
                ArrayList<String> busnSel = new ArrayList<String>();
            for(Component c: jPanel2.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSel.add(jcb.getText());
                    }
                }
            }
            ArrayList<String> busnSubSel = new ArrayList<String>();
            for(Component c: jPanel3.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSubSel.add(jcb.getText());
                    }
                }
            }
            
              ArrayList<String> AttributeSel = new ArrayList<String>();
            for(Component c: jPanel4.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        AttributeSel.add(jcb.getText());
                    }
                }
            }
            System.out.println("TESTING PURPOSES");
            System.out.println(busnSel);
            System.out.println(busnSubSel);
            System.out.println(AttributeSel);
                //hargavi
            query = query+"select business_id,business_name,city,state,stars from business join businesscategory on business_id = bid where ";
            for(int i =0;i<busnSel.size();i++){
                if(i == busnSel.size() - 1){
                    query = query+"busncatgname = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busncatgname = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            query = query+" "+and_or+" ";
            for(int i =0;i<busnSubSel.size();i++){
                if(i == busnSubSel.size() - 1){
                    query = query+"busnsubcat = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busnsubcat = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            query = query+" "+and_or+" ";
            for(int i =0;i<AttributeSel.size();i++){
                if(i == busnSubSel.size() - 1){
                    query = query+"ATRRIBUTES = '"+AttributeSel.get(i)+"'";
                }else{
                    query = query+" ATRRIBUTES = '"+AttributeSel.get(i)+"' OR ";
                } 
            }
                System.out.println(query);
        String sQuery1="SELECT BUSINESS_ID FROM BUSINESS WHERE BUSINESS_ID IN \n" +
"((SELECT BID FROM BUSINESSCATEGORY WHERE  BUSNCATGNAME LIKE '%Department Stores%') INTERSECT (SELECT BID FROM BUSINESSCATEGORY WHERE  BUSNSUBCAT LIKE '%Sporting Goods%') INTERSECT (SELECT DISTINCT BUSINESS_ID FROM REVIEWS WHERE DATEE >= '31-DEC-06' OR DATEE <= '29-DEC-13' GROUP BY Business_id HAVING AVG(STARS) >= 1))";
       
        
        String query1 = "select * from (select A.business_id,A.business_name,A.stars,A.city,A.state,A.number_of_votes from (select X.business_id,X.business_name,X.city,X.State,X.stars,Y.number_of_votes from ("+query+") X , (select count(review_id) as number_of_votes,business_id from VOTES_REVIEW group by business_id) Y where X.business_id = Y.business_id) A"
           +", (select * from reviews where to_char((datee),'yy-mm') >= '"+from+"' and to_char((datee),'yy-mm') <= '"+to+"') B where A.business_id = B.Business_id) where number_of_votes "+vote_ranged+" "+votes_data+
           " "+and_or+" stars "+star_ranged+" "+star_data;
        System.out.println(sQuery);//////
        jTextArea1.setText(sQuery);// TODO add your handling code here:////
        stmt = con.createStatement();/////
    //ResultSet rs = stmt.executeQuery(query1);
        ResultSet rs = stmt.executeQuery(sQuery);
        while (rs.next()){
                ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnCount(rsmd.getColumnCount());
            Vector<String> cols = new Vector();
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                cols.add(rsmd.getColumnName(i + 1));
            }
            model.setColumnIdentifiers(cols);
            while (rs.next()) {
                cols = new Vector();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    cols.add(rs.getString(rsmd.getColumnName(i + 1)));
                }
                model.addRow(cols);
            }
         
            jTable1.setModel(model);
            
   
        } 
     }catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } 
        
 //do }
  
 //do catch(Exception e){
 //do     System.out.println("Query not working");
 //do     e.printStackTrace();
 //do }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            try {
            // TODO add your handling code here:
            Connection con = null;
            DBConnection dbcontection = new DBConnection();
            con = dbcontection.openConnection();
            String query ="";
            ArrayList<String> busnSel = new ArrayList<String>();
            // String and_or = (String) andor.jComboBox12().toString();
String and_or="OR";
            for(Component c: jPanel2.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSel.add(jcb.getText());
                    }
                }
            }
            ArrayList<String> busnSubSel = new ArrayList<String>();
            for(Component c: jPanel3.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSubSel.add(jcb.getText());
                    }
                }
            }
            System.out.println("busnSel"+busnSel);
            System.out.println("busnSubSel"+busnSubSel);
            

            query = query+"select business_id,atrributes from business join businesscategory on business_id = bid where ";
            for(int i =0;i<busnSel.size();i++){
                if(i == busnSel.size() - 1){
                    query = query+"busncatgname = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busncatgname = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            query = query+" "+and_or+" ";
            for(int i =0;i<busnSubSel.size();i++){
                if(i == busnSubSel.size() - 1){
                    query = query+"busnsubcat = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busnsubcat = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            System.out.println(query);
            PreparedStatement ps = con.prepareStatement(query);
//            int inc =1;
//           for(String str : busnSel){
//               System.out.println("assignment3.businessSearch.GetAttributes()"+str);
//               System.out.println("assignment3.businessSearch.GetAttributes()"+inc);
//               ps.setString(inc, str);
//           inc++;    
//           }
            jPanel4.removeAll();
            ResultSet res= ps.executeQuery();
            ArrayList AttCategorys = new ArrayList();
            while (res.next()){
                String business_id = (String) res.getString(1);
                String attributes = (String) res.getString(2);
                try {
                    JSONObject attr = (JSONObject) new JSONParser().parse(attributes);
                } catch (org.json.simple.parser.ParseException ex) {
                    Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
                }
Map<String, Object> retMap = new Gson().fromJson(attributes, new TypeToken<HashMap<String, Object>>() {}.getType());
  Set<String> keys = retMap.keySet();
        for(String key: keys){
            System.out.println(key);
//              String result = res.getString(1)+"\n";
                JCheckBox newChBox = new JCheckBox();
                newChBox.setText(key);
                AttCategorys.add(newChBox);
        }
            }
            jPanel4.setLayout(new GridLayout(0,2,10,10));
            for(Object ch : AttCategorys){
                jPanel4.add((Component) ch);
                jPanel4.revalidate();
                jPanel4.repaint();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
            String sSelected = "";
        String prevQuery = jTextArea2.getText();//initialized string prevquery here
      
        String sQuery = "";
        DBConnection dbconnection = new DBConnection();
        //START
             if (Result.getSelectedRow() > -1){
             System.out.println("assignment3.userSearch.user_tableMouseClicked()");
             String Selected_business = jTable1.getValueAt(jTable1.getSelectedRow(),3).toString();
             System.out.println(Selected_business);
             
             try {        
                 queryingReviewsTableforBusiness(Selected_business);
             } catch (SQLException ex) {
                 Logger.getLogger(hw3.class.getName()).log(Level.SEVERE, null, ex);
             }
         }        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked
 
    public void queryingReviewsTableforBusiness(String Business_user) throws SQLException{
            String line = null;
 ArrayList<JSONObject> json = new ArrayList<JSONObject>();
 JSONObject obj;
 Connection con = null;
 DBConnection dbconnection = new DBConnection();
  con = dbconnection.openConnection();
  java.sql.Statement stmt = null;
                String query = "select user_id,review_id,text from reviews where user_id = '"+Business_user+"'";
                jTextArea2.setText(query);
                System.out.println(query);
    stmt = con.createStatement();
    ResultSet rs = stmt.executeQuery(query);
    while(rs.next()){
    String business_id =rs.getString(1);
     String review_id = rs.getString(4);
     
                   System.out.println("user_id "+business_id+" review_id "+review_id);
             ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnCount(rsmd.getColumnCount());
            Vector<String> cols = new Vector();
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                cols.add(rsmd.getColumnName(i + 1));
            }
            model.setColumnIdentifiers(cols);
            while (rs.next()) {
                cols = new Vector();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    cols.add(rs.getString(rsmd.getColumnName(i + 1)));
                }
                model.addRow(cols);
            }
            jTable1.setModel(model);
   
        } 
}
    public void queringData() throws SQLException, ParseException{

  
 
//  String date = sc.nextLine();
//  System.out.println(yelping_since);
//    SimpleDateFormat format = new SimpleDateFormat("YYYY-MM");
//    System.out.println(format);
//     Date parsed = format.parse(date.toString());
//     System.out.println(parsed);
//     Date yelping_since = new Date(parsed.getTime());
//  java.sql.Date yelping_since = java.sql.Date.valueOf(date);
     try{
  String yelping_since = year+"-"+month;
  BigDecimal count = new BigDecimal(review_count);
  String number_of_friends = no_friends;
  String andOr = andor;
 String votes = vote;
 BigDecimal star =new BigDecimal(stars);
 BigDecimal votes_count=new BigDecimal(votes);
  java.sql.Statement stmt = null;
//  so fAR quering for yelping since, review count, average rating,friends count
//  System.out.println("yelping since"+yelping_since +"review count"+ count+"Stars"+stars);
query1 = "select * from (select * from  yelp_users where to_char((YELPING_SINCE),'YYYY-MM')"+check+"'"+yelping_since+"' and review_count "+check1+" '"
  +count+"' "+andOr+" average_stars"+check3+"'"+star+"'AND ROWNUM<=50) x,(select count(friends_id)as number_of_friends,user_id from friends WHERE ROWNUM<=50 group by user_id) y ,(select SUM(cool+funny+useful) as number_of_votes,user_id from votes WHERE ROWNUM<=50 group by user_id) z where x.user_id = y.user_id and x.user_id =z.user_id "+
   andOr + " y.number_of_friends "+check2+"'"+number_of_friends+"' "+andOr+" number_of_votes "+check4+"'"+votes_count+"'AND ROWNUM<=50";
  //String query = "select * from yelp_user where yelping_since='"+yelping_since +"' and review_count='"
    //  +count+"' and average_stars='"+stars+"'";
String query3 = "select * from (select Z.member_since,z.friends,z.names,z.avg_star,z.user_id,a.number_of_votes from (select X.yelping_since"
                +" as Member_since,y.number_of_friends as friends,x.user_name as Names,x.average_stars as Avg_star,X.user_id as user_id from "
                +"(select * from yelp_users where to_char((yelping_since),'yyyy-mm')"+check+" '"+yelping_since+"' "+andor+" review_count "+check1+" '"+count+"' "+andor+" average_stars "+check3+" '"+star+"') X,"
                +"(select count(friends_id) as number_of_friends,user_id from friends group by user_id) Y where X.user_id = Y.user_id) Z,"
                +"(select SUM(cool+funny+useful) as number_of_votes,user_id from votes group by user_id) A where Z.user_id = A.user_id) where friends "+check2+" '"+number_of_friends+"' "
                +" "+andor+" number_of_votes "+check4+" "+votes_count;
    System.out.println(query1);
    //query1 ="select * from (select * from  yelp_users where to_char((YELPING_SINCE),'YYYY-MM')='2010-09' AND review_count = '22' OR average_stars='5' AND ROWNUM<=50) x,(select count(friends_id)as number_of_friends,user_id from friends WHERE ROWNUM<=50 group by user_id) y ,(select SUM(cool+funny+useful) as number_of_votes,user_id from votes WHERE ROWNUM<=50 group by user_id) z where x.user_id = y.user_id AND x.user_id =z.user_id OR y.number_of_friends ='15' OR number_of_votes ='7' AND ROWNUM<=50";
    stmt = con.createStatement();
    ResultSet rs = stmt.executeQuery(query1);
    while(rs.next()){
     Date dates = rs.getDate(1);
     BigDecimal review_count = rs.getBigDecimal(2);
    String user_name = rs.getString(3);
    String average_star = rs.getString(6);
    System.out.println("dates "+ dates+"review_count "+ review_count+"user_name "+user_name+" average_star "+average_star );
    //TRIAL
      ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnCount(rsmd.getColumnCount());
            Vector<String> cols = new Vector();
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                cols.add(rsmd.getColumnName(i + 1));
            }
            model.setColumnIdentifiers(cols);
            while (rs.next()) {
                cols = new Vector();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    cols.add(rs.getString(rsmd.getColumnName(i + 1)));
                }
                model.addRow(cols);
            }
            Result.setModel(model);
   
        } 
     }catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } 

    //TRIAL
    }   
  
    /**
     * @param args the command line arguments
     */
    //bhargavi
  
 

    //bhargavi
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hw3().setVisible(true);
            }
        });
        //bhargavi

        
    }
 private ArrayList<JCheckBox> subCats;//ADDED BY BHARGAVI
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Result;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox12;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
